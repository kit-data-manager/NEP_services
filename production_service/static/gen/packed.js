class FDO{constructor(customName,pid){this.customName=customName;this.pid=pid;this.properties=[];}
setPid(pid){this.pid=pid;}
getPid(){return this.pid;}
setCustomName(customName){this.customName=customName;}
getCustomName(){return this.customName;}
addProperty(key,value){this.properties.push({"key":key,"value":value});}
removeProperty(idx){this.properties.splice(idx,1);}
getProperties(){return this.properties;}
hasLinkTo(pid){for(let i=0;i<this.properties.length;i++){if(this.properties[i].value===pid)return true;}
return false;}
fromObject(object){let f=new FDO();f.setCustomName(object['customName']);f.setPid(object['pid']);for(let i=0;i<object['properties'].length;i++){f.addProperty(object['properties'][i].key,object['properties'][i].value);}
return f;}
fromTypedPidMaker(document){let fdoJson=JSON.parse(document);this.pid=fdoJson.pid;console.log(fdoJson);for(let i=0;i<fdoJson.record.length;i++){if(fdoJson.record[i].key==="21.T11148/82e2503c49209e987740"){this.addProperty(fdoJson.record[i].key,JSON.parse(fdoJson.record[i].value));}else{this.addProperty(fdoJson.record[i].key,fdoJson.record[i].value);}}}
toTypedPidMaker(){let result={"record":[]};result.pid=this.getPid();for(let i=0;i<this.properties.length;i++){if(this.properties[i].key==="customName"){}else if(this.properties[i].key==="21.T11148/82e2503c49209e987740"){let entry={"key":this.properties[i].key,"value":JSON.stringify(this.properties[i].value)};result.record.push(entry);}else{let entry={"key":this.properties[i].key,"value":this.properties[i].value};result.record.push(entry);}}
return result;}
fromJson(formOutput,known_types){let result=new FDO();result.pid="(:tba)_"+new Date().getTime();let labelMap=known_types.map(a=>a.label);let formOutputObject=JSON.parse(formOutput);let keys=Object.keys(formOutputObject);result.setCustomName(formOutputObject["customName"])
for(let i=0;i<keys.length;i++){let pid=model['properties'][keys[i]]['pid'];if(labelMap.indexOf(formOutputObject[keys[i]])>=0){result.addProperty(pid,known_types.slice(labelMap.indexOf(formOutputObject[keys[i]]),1).at(0)['pid']);}else{if(pid=='21.T11148/82e2503c49209e987740'){let checksumValue=formOutputObject[keys[i]];let checksumAlg=undefined;switch(checksumValue.length){case 32:{checksumAlg="md5";break;}
default:{checksumAlg="sha"+(4*checksumValue.length);}}
let checksumRecordValue={};checksumRecordValue[checksumAlg+"sum"]=checksumValue;result.addProperty(pid,checksumRecordValue);}else if(pid=='21.T11148/b415e16fbe4ca40f2270'){result.addProperty(pid,formOutputObject[keys[i]]);}else{if(formOutputObject[keys[i]]){result.addProperty(pid,formOutputObject[keys[i]]);}}}}
return result;}
toNode(){let node={};node.id=this.pid;let typeProperty=this.properties.find((element)=>element.key==="21.T11148/1c699a5d1b4ad3ba4956");if(typeProperty){node.type=typeProperty.value;}
node.customName=this.customName;let props=[];for(let i=0;i<this.properties.length;i++){let prop=this.properties[i];props.push({"key":prop.key,"value":prop.value});}
node.props=props;return node;}};class FDOStore{constructor(resolver){this.restore();this.resolver=resolver;}
store(){localStorage.setItem("fdo_creator_fdos",JSON.stringify(Array.from(this.fdos.entries())));}
restore(){let fdoString=localStorage.getItem("fdo_creator_fdos");if(fdoString){this.fdos=new Map(JSON.parse(fdoString));this.fdos.forEach((fdo,key)=>{let f=new FDO().fromObject(fdo);this.fdos.set(key,f);});}else{this.fdos=new Map();}}
reset(){localStorage.removeItem("fdo_creator_fdos");this.fdos=new Map();}
addFdo(fdo){this.fdos.set(fdo.getPid(),fdo);this.store();}
removeFdo(pid){this.fdos.delete(pid);this.store();}
getPids(){return Array.from(this.fdos.keys());}
getLinkedFDOs(pid){let pids=this.getPids();let linkedFdos=[]
let fdo=this.getFdo(pid);for(let i=0;i<fdo.getProperties().length;i++){let valuePid=fdo.getProperties()[i].value;if(pids.includes(valuePid)){linkedFdos.push({"pid":valuePid,"relationType":fdo.getProperties()[i].key});}}
return linkedFdos;}
unlinkFdo(source,target){let fdo=this.getFdo(source);for(let i=0;i<fdo.getProperties().length;i++){let valuePid=fdo.getProperties()[i].value;if(valuePid===target){fdo.removeProperty(i);break;}}
this.store();}
getLinks(node){let linkNodes=[];linkNodes.push(node);for(let i=0;i<node.sourceLinks.length;i++){linkNodes.push(node.sourceLinks[i].target);}
for(let i=0;i<node.targetLinks.length;i++){linkNodes.push(node.targetLinks[i].source);}
return linkNodes;}
getFdo(pid){return this.fdos.get(pid);}
toData(){let data={"nodes":[],"links":[]};let pids=this.getPids();this.fdos.forEach((fdo)=>{let node=fdo.toNode();data.nodes.push(node);node.props.forEach((entry)=>{if(pids.includes(entry.value)){let link={"source":node.id,"target":entry.value,"relationType":this.resolver(entry.key)};data.links.push(link);}});});return data;}}
let keycloak=undefined;let config=undefined;function userLoggedIn(_login,_messageCallback,_loginCallback){let username=undefined;if(_login){$("#login_icon").attr("class","sign-out icon")
$("#login_button_text").text("Logout");_messageCallback(0,'User '+keycloak.idTokenParsed.preferred_username+' logged in.');config.token=keycloak.token;localStorage.setItem("userLoggedIn",true);localStorage.setItem("token",config.token);username=keycloak.idTokenParsed.preferred_username;}else{$("#login_icon").attr("class","sign-in icon")
$("#login_button_text").text("Login");config.token=null;localStorage.removeItem("userLoggedIn",true);localStorage.removeItem("token",true);}
_loginCallback(_login,username);}
function applyConfig(_keycloak,_showServiceUrl,_appDescription,_config,_messageCallback=(status,message)=>console.log((status==0)?"INFO: ":"ERROR:"+": "+message),_loginCallback=(loggedIn,username)=>console.log("Logged in: "+loggedIn+"as User: "+username)){keycloak=_keycloak;config=_config;if(!_showServiceUrl){$('#service-url-input').empty();}
$('#app-logo').attr("src",_appDescription["app-logo"]);let header=_appDescription["app-title"]+
'<div id="app-subtitle" class="sub header">'+_appDescription["app-subtitle"]+'</div>';$('#app-title').html(header);if(typeof keycloak!=typeof undefined){keycloak.onAuthSuccess=function(){userLoggedIn(true,_messageCallback,_loginCallback);};keycloak.onAuthLogout=function(){userLoggedIn(false,_messageCallback,_loginCallback);};keycloak.onTokenExpired=()=>{addMessage(0,'Keycloak token expired. Trying to refresh.');keycloak.updateToken(30).success(()=>{_messageCallback(0,'Successfully got a new token.');config.token=keycloak.token;if(loginCallback)loginCallback(true,keycloak.idTokenParsed.preferred_username);}).error(()=>{_messageCallback(1,"Failed to refresh keycloak token.");userLoggedIn(false,_messageCallback,_loginCallback);config.token=null;if(loginCallback)loginCallback(false,undefined);});};keycloak.init({responseMode:'fragment',onLoad:'login-required'}).then(function(authenticated){if(!authenticated){console.log('User not authenticated');keycloak.login();}}).catch(function(){_messageCallback(1,"Failed to initialize authentication process.");});}else{$("#login_button").attr("style","display:none");if($("#logged_in_as")){$("#logged_in_as").attr("style","display:none");}}}
export let config={};function generateEtag(idValue){let headers={Accept:"application/json"};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
return new Promise(function(resolve,reject){$.ajax({type:"GET",url:config.ajaxBaseUrl+"dataresources/"+idValue,dataType:"json",headers:headers,success:function(output,status,xhr){resolve(xhr.getResponseHeader("ETag"));},error:function(result){let message="Failed generate ETag for resource with id "+idValue+". (HTTP "+result.status+")";reject(message);}})});}
function generateContentEtag(idValue,relativePath){let headers={Accept:"application/vnd.datamanager.content-information+json"};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
return new Promise(function(resolve,reject){$.ajax({type:"GET",url:config.ajaxBaseUrl+"dataresources/"+idValue+"/data/"+relativePath,dataType:"json",headers:headers,success:function(output,status,xhr){resolve(xhr.getResponseHeader("ETag"));},error:function(result){let message="Failed generate ETag for resource with id "+idValue+" and content path "+relativePath+". (HTTP "+result.status+")";reject(message);}})});}
function getContentInformation(resourceId,relativePath){let headers={Accept:"application/vnd.datamanager.content-information+json"};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
return new Promise(function(resolve,reject){$.ajax({type:"GET",url:config.ajaxBaseUrl+"dataresources/"+resourceId+"/data/"+relativePath,headers:headers,cache:false,success:function(result){resolve(result);},error:function(result){let message="Failed read content information at path "+relativePath+". (HTTP "+result.status+")";reject(message);}})});}
export function createDataResource(valueRecord){return new Promise(function(resolve,reject){let headers={};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"POST",url:config.ajaxBaseUrl+"dataresources/",contentType:"application/json",processData:false,headers:headers,data:JSON.stringify(JSON.parse(valueRecord),null,2),success:function(){resolve("Data resource successfully created.");},error:function(result){let message="Failed to create data resource. (HTTP "+result.status+")";reject(message);}});});};export function updateDataResource(valueRecord){let resourceId=JSON.parse(valueRecord).id;return generateEtag(resourceId).then(function(result){return new Promise(function(resolve,reject){let headers={"If-Match":result,};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"PUT",url:config.ajaxBaseUrl+"dataresources/"+resourceId,contentType:"application/json",processData:false,headers:headers,data:JSON.stringify(JSON.parse(valueRecord),null,2),success:function(){resolve("Data resource successfully updated.");},error:function(result){let message="Failed to update data resource. (HTTP "+result.status+")";reject(message);}});});})};export function patchContentMetadata(resourceId,relativePath,tag){let patch=null;return getContentInformation(resourceId,relativePath).then(success=>{let idx=-1;for(let i=0;i<success.tags.length;i++){if(success.tags[i]===tag){idx=i;break;}}
if(idx==-1){patch=[{"op":"add","path":"/tags/0","value":tag}];}else{patch=[{"op":"remove","path":"/tags/"+idx}];}
return generateContentEtag(resourceId,relativePath).then(function(result){return new Promise(function(resolve,reject){let headers={"If-Match":result,};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"PATCH",url:config.ajaxBaseUrl+"dataresources/"+resourceId+"/data/"+relativePath,contentType:"application/json-patch+json",processData:false,headers:headers,data:JSON.stringify(patch,null,2),success:function(){resolve("Content metadata successfully patched.");},error:function(result){let message="Failed to patch content metadata. (HTTP "+result.status+")";reject(message);}});});})})};export function uploadContent(resourceId,relativePath,contentInformationRecord,file){let formData=new FormData();if(contentInformationRecord!=null){let blobRecord=new Blob([JSON.stringify(JSON.parse(contentInformationRecord),null,2)],{type:"application/json"});const recordFile=new File([blobRecord],'recordFile.json');formData.append("metadata",recordFile);}
return new Promise(function(resolve,reject){if(!file){reject("No file to upload provided.");}
if(!relativePath){reject("No relative path provided.");}
formData.append("file",file);resolve(true);}).then(success=>{return generateEtag(resourceId).then(function(result){return new Promise(function(resolve,reject){let headers={"If-Match":result};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"PUT",url:config.ajaxBaseUrl+"dataresources/"+resourceId+"/data/"+relativePath,contentType:"multipart/form-data",processData:false,headers:headers,data:formData,success:function(){resolve("Metadata record successfully updated.");},error:function(result){let message="Failed to update schema record. (HTTP "+result.status+")";reject(message);}});});})});};export let config={};function generateEtag(idValue){let headers={Accept:"application/json"};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
return new Promise(function(resolve,reject){$.ajax({type:"GET",url:config.ajaxBaseUrl+"collections/"+idValue,dataType:"json",headers:headers,success:function(output,status,xhr){resolve(xhr.getResponseHeader("ETag"));},error:function(result){let message="Failed generate ETag for resource with id "+idValue+". (HTTP "+result.status+")";reject(message);}})});}
export function createCollection(valueRecord){return new Promise(function(resolve,reject){let headers={};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"POST",url:config.ajaxBaseUrl+"collections/",contentType:"application/json",processData:false,headers:headers,data:JSON.stringify(JSON.parse(valueRecord),null,2),success:function(){resolve("Data resource successfully created.");},error:function(result){let message="Failed to create collection. (HTTP "+result.status+")";reject(message);}});});};export function updateCollection(valueRecord){let resourceId=JSON.parse(valueRecord).id;return generateEtag(resourceId).then(function(result){return new Promise(function(resolve,reject){let headers={"If-Match":result,};if(config.token!=null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"PUT",url:config.ajaxBaseUrl+"collections/"+resourceId,contentType:"application/json",processData:false,headers:headers,data:JSON.stringify(JSON.parse(valueRecord),null,2),success:function(){resolve("Collection successfully updated.");},error:function(result){let message="Failed to update collection. (HTTP "+result.status+")";reject(message);}});});})};export let ajaxBaseUrl="http://localhost:8070/api/v1/";export const keycloak=undefined;export const showServiceUrl=true;export const appDescription={"app-logo":"./images/metadata.jpg","app-title":"Collection Registry Frontend","app-subtitle":"Organize your Contents"};(function(root,factory){if(typeof define==='function'&&define.amd){define([],factory);}else if(typeof exports==='object'){module.exports=factory();}else{root.download=factory();}}(this,function(){return function download(data,strFileName,strMimeType){var self=window,defaultMime="application/octet-stream",mimeType=strMimeType||defaultMime,payload=data,url=!strFileName&&!strMimeType&&payload,anchor=document.createElement("a"),toString=function(a){return String(a);},myBlob=(self.Blob||self.MozBlob||self.WebKitBlob||toString),fileName=strFileName||"download",blob,reader;myBlob=myBlob.call?myBlob.bind(self):Blob;if(String(this)==="true"){payload=[payload,mimeType];mimeType=payload[0];payload=payload[1];}
if(url&&url.length<2048){fileName=url.split("/").pop().split("?")[0];anchor.href=url;if(anchor.href.indexOf(url)!==-1){var ajax=new XMLHttpRequest();ajax.open("GET",url,true);ajax.responseType='blob';ajax.onload=function(e){download(e.target.response,fileName,defaultMime);};setTimeout(function(){ajax.send();},0);return ajax;}}
if(/^data\:[\w+\-]+\/[\w+\-]+[,;]/.test(payload)){if(payload.length>(1024*1024*1.999)&&myBlob!==toString){payload=dataUrlToBlob(payload);mimeType=payload.type||defaultMime;}else{return navigator.msSaveBlob?navigator.msSaveBlob(dataUrlToBlob(payload),fileName):saver(payload);}}
blob=payload instanceof myBlob?payload:new myBlob([payload],{type:mimeType});function dataUrlToBlob(strUrl){var parts=strUrl.split(/[:;,]/),type=parts[1],decoder=parts[2]=="base64"?atob:decodeURIComponent,binData=decoder(parts.pop()),mx=binData.length,i=0,uiArr=new Uint8Array(mx);for(i;i<mx;++i)uiArr[i]=binData.charCodeAt(i);return new myBlob([uiArr],{type:type});}
function saver(url,winMode){if('download'in anchor){anchor.href=url;anchor.setAttribute("download",fileName);anchor.className="download-js-link";anchor.innerHTML="downloading...";anchor.style.display="none";document.body.appendChild(anchor);setTimeout(function(){anchor.click();document.body.removeChild(anchor);if(winMode===true){setTimeout(function(){self.URL.revokeObjectURL(anchor.href);},250);}},66);return true;}
if(/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent)){url=url.replace(/^data:([\w\/\-\+]+)/,defaultMime);if(!window.open(url)){if(confirm("Displaying New Document\n\nUse Save As... to download, then click back to return to this page.")){location.href=url;}}
return true;}
var f=document.createElement("iframe");document.body.appendChild(f);if(!winMode){url="data:"+url.replace(/^data:([\w\/\-\+]+)/,defaultMime);}
f.src=url;setTimeout(function(){document.body.removeChild(f);},333);}
if(navigator.msSaveBlob){return navigator.msSaveBlob(blob,fileName);}
if(self.URL){saver(self.URL.createObjectURL(blob),true);}else{if(typeof blob==="string"||blob.constructor===toString){try{return saver("data:"+mimeType+";base64,"+self.btoa(blob));}catch(y){return saver("data:"+mimeType+","+encodeURIComponent(blob));}}
reader=new FileReader();reader.onload=function(e){saver(this.result);};reader.readAsDataURL(blob);}
return true;};}));function escapeXml(unsafe){return unsafe.replace(/["]/g,function(c){switch(c){case'"':return'\'';}});};function unescapeXml(safe){return safe.replace(/[']/g,function(c){switch(c){case'\'':return'\"';}});};function readFile(input){return new Promise(function(resolve,reject){if(input[0].value.length!==0){let file=input[0].files[0];let reader=new FileReader();reader.readAsText(file);reader.onload=function(){let documentAsText=reader.result;resolve(documentAsText);};}else{reject("No file selected.");}});};function create_UUID(){let dt=new Date().getTime();let uuid='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){let r=(dt+Math.random()*16)%16|0;dt=Math.floor(dt/16);return(c=='x'?r:(r&0x3|0x8)).toString(16);});return uuid;}
export{escapeXml,unescapeXml,readFile,create_UUID};let svg=d3.select("svg"),width=+svg.node().getBoundingClientRect().width,height=+svg.node().getBoundingClientRect().height;let gLink,gNode,dNodes,dLinks,dText,nodeLabels,gOverlay,zoomTransform,dLabels;let graph;let fdoStore;let colorPid,colorType;let tip;let maxTextWidth;let dragging=false;export function chart(_fdoStore){fdoStore=_fdoStore;}
export function render(){svg.selectAll("*").remove();graph=buildGraph(fdoStore.toData());colorPid=d3.scaleOrdinal(graph.nodes.map(d=>d.id).sort(d3.ascending),d3.schemeCategory10);colorType=d3.scaleOrdinal(graph.links.map(d=>d.relationType).sort(d3.ascending),d3.schemeCategory10);let defs=svg.join("defs");let set=[...new Set(graph.links.map(d=>d.relationType))];for(let i=0;i<set.length;i++){let elem=set[i];defs.append("svg:marker").attr("id","marker_"+elem).attr("refX",24).attr("refY",6).attr("markerWidth",30).attr("markerHeight",30).attr("markerUnits","userSpaceOnUse").attr("orient","auto").append("path").attr("d","M 0 0 12 6 0 12 3 6").style("fill",colorType(elem));}
initializeDisplay();initializeSimulation();}
let buildGraph=(data)=>{const nodes=data.nodes.map(({id,type,customName,props})=>({id,customName,sourceLinks:[],targetLinks:[],type,props}));const nodeById=new Map(nodes.map(d=>[d.id,d]));const links=data.links.map(({source,target,relationType})=>({source:nodeById.get(source),target:nodeById.get(target),relationType}));for(const link of links){const{source,target}=link;source.sourceLinks.push(link);target.targetLinks.push(link);}
return{nodes,links};}
let simulation=d3.forceSimulation();function initializeSimulation(){simulation.nodes(graph.nodes);initializeForces();simulation.on("tick",ticked);}
let forceProperties={center:{x:0.5,y:0.5},charge:{enabled:true,strength:-70,distanceMin:40,distanceMax:2000},collide:{enabled:true,strength:.7,iterations:1,radius:5},forceX:{enabled:false,strength:.1,x:.5},forceY:{enabled:false,strength:.1,y:.5},link:{enabled:true,distance:250,iterations:1}}
function initializeForces(){simulation.force("link",d3.forceLink()).force("charge",d3.forceManyBody()).force("collide",d3.forceCollide()).force("center",d3.forceCenter()).force("forceX",d3.forceX()).force("forceY",d3.forceY());updateForces();}
function updateForces(){simulation.force("center").x(width*forceProperties.center.x).y(height*forceProperties.center.y);simulation.force("charge").strength(forceProperties.charge.strength*forceProperties.charge.enabled).distanceMin(forceProperties.charge.distanceMin).distanceMax(forceProperties.charge.distanceMax);simulation.force("collide").strength(forceProperties.collide.strength*forceProperties.collide.enabled).radius(forceProperties.collide.radius).iterations(forceProperties.collide.iterations);simulation.force("forceX").strength(forceProperties.forceX.strength*forceProperties.forceX.enabled).x(width*forceProperties.forceX.x);simulation.force("forceY").strength(forceProperties.forceY.strength*forceProperties.forceY.enabled).y(height*forceProperties.forceY.y);simulation.force("link").id(function(d){return d.id;}).distance(forceProperties.link.distance).strength(.01).iterations(forceProperties.link.iterations).links(forceProperties.link.enabled?graph.links:[]);simulation.alpha(1).restart();}
function initializeDisplay(){let tip=d3.select("body").append("div").attr("class","tooltip").style("opacity",0);gLink=svg.append("g").attr("class","links");let processed=[];dLinks=gLink.selectAll("line").data(graph.links).enter().append("line").attr("class","dummy").attr("id",function(d,i){return"linkId_"+i;}).attr("stroke-width",2).attr("stroke",d=>colorType(d.relationType)).attr("opacity",forceProperties.link.enabled?2:0).attr("marker-end",d=>'url(#marker_'+d.relationType+')').attr("marker-fill",'red').attr("class",(d)=>{processed.push(d.source.id+" - "+d.target.id);if(processed.includes(d.target.id+" - "+d.source.id)){return"dashed"}
return"solid";});dText=gLink.selectAll(".marker").data(graph.links).enter().append("text").attr("class","marker").attr("font-family","sans-serif").attr("font-size",8).attr("fill",d=>colorType(d.relationType)).text((d)=>d.relationType);maxTextWidth=d3.max(dText.nodes(),n=>n.getComputedTextLength());gOverlay=svg.append("g").attr("id","overlay").attr("class","marker");gNode=svg.append("g").attr("class","nodes");dNodes=gNode.selectAll("circle").data(graph.nodes).enter().append("circle").attr("r",16).attr("r",d=>d.selected?20:16).attr("fill",d=>colorPid(d.id)).attr("class","dummy").on("mouseover",(e,d)=>{if(dragging){return;}
let linkNodes=fdoStore.getLinks(d);if(externalSelection.length>0){for(let i=0;i<graph.nodes.length;i++){if(externalSelection.includes(graph.nodes[i].id)){linkNodes.push(graph.nodes[i]);}}}
hideLabels();drawLabels(linkNodes);}).on("mouseout",(e,d)=>{hideLabels();if(externalSelection.length>0){selectNodes(externalSelection)}
}).call(d3.drag().on("start",dragstarted).on("drag",dragged).on("end",dragended));svg.call(d3.zoom().extent([[0,0],[+svg.node().getBoundingClientRect().width,+svg.node().getBoundingClientRect().height]]).scaleExtent([0,8]).on("zoom",zoomed));}
let externalSelection=[];export function selectNodes(nodeIds){externalSelection=nodeIds;dNodes.classed("selected",false).order();dNodes.classed("unselected",false).order();dLinks.classed("selected",false).order();dLinks.classed("unselected",false).order();dText.classed("selected",false).order();dText.classed("unselected",false).order();if(nodeIds.length>0){dNodes.classed("unselected",d=>!nodeIds.includes(d.id));dLinks.classed("unselected",d=>!(nodeIds.includes(d.source.id)&&nodeIds.includes(d.target.id)));dText.classed("unselected",d=>!(nodeIds.includes(d.source.id)&&nodeIds.includes(d.target.id)));dNodes.classed("selected",d=>nodeIds.includes(d.id));dLinks.classed("selected",d=>(nodeIds.includes(d.source.id)&&nodeIds.includes(d.target.id)));dText.classed("selected",d=>(nodeIds.includes(d.source.id)&&nodeIds.includes(d.target.id)));}
dNodes.attr("r",d=>nodeIds.includes(d.id)?20:16);if(nodeIds.length==0){hideLabels();}else{let selectedNodes=[];for(let i=0;i<graph.nodes.length;i++){if(nodeIds.includes(graph.nodes[i].id)){selectedNodes.push(graph.nodes[i]);}}
hideLabels();drawLabels(selectedNodes);}}
function drawLabels(linkNodes){dLabels=gOverlay.selectAll("g").attr("id","drawLayer").data(linkNodes).enter().append("g").attr("class","nameLabel");dLabels.append("path").attr("d",d=>`M${d.x-20}${d.y-20}l 6 10 l-10-4 l-170 0 l 0-16 l 174 0 Z`);dLabels.append("text").attr("font-family","sans-serif").attr("font-size",12).text(d=>{return d.customName?d.customName:d.id;}).attr("x",(d,i,e)=>{let scale=170.0/e[i].getComputedTextLength();if(scale>=1){return d.x-107-e[i].getComputedTextLength()/2;}else{return d.x-107-(scale*e[i].getComputedTextLength())/2;}}).attr("y",d=>d.y-18).attr("transform",(d,i,e)=>{let scale=170.0/e[i].getComputedTextLength();let xPos=d.x-107-(scale*e[i].getComputedTextLength())/2;let yPos=d.y-18;return(scale<1)?"translate("+(-xPos*(scale-1))+","+(-yPos*(scale-1))+")scale("+scale+","+scale+")":"";});}
function hideLabels(){svg.selectAll(".nameLabel").remove();svg.selectAll("#drawLayer").remove();dLabels=undefined;}
function ticked(){dLinks.attr("x1",function(d){return d.source.x;}).attr("y1",function(d){return d.source.y;}).attr("x2",function(d){return d.target.x;}).attr("y2",function(d){return d.target.y;});let processed=[];dText.attr("transform",(d,i)=>{let slope=(d.target.y-d.source.y)/(d.target.x-d.source.x);let deg=Math.atan(slope)*180/Math.PI;let centerX=(d.source.x+d.target.x)/2;let centerY=(d.source.y+d.target.y)/2;let xTrans=-maxTextWidth/2;let yTrans=-3;processed.push(d.source.id+" - "+d.target.id);if(processed.includes(d.target.id+" - "+d.source.id)){yTrans=8;}
return"translate("+centerX+","+centerY+")rotate("+deg+")translate("+xTrans+","+yTrans+")";});dNodes.attr("cx",function(d){return d.x;}).attr("cy",function(d){return d.y;});if(dLabels){dLabels.attr("x",function(d){return d.x;}).attr("y",function(d){return d.y;});}
d3.select('#alpha_value').style('flex-basis',(simulation.alpha()*100)+'%');}
function zoomed({transform}){zoomTransform=transform;gLink.attr("transform",transform);gNode.attr("transform",transform);gOverlay.attr("transform",transform);}
function dragstarted(e,d){if(!e.active)simulation.alphaTarget(0.3).restart();hideLabels();dragging=true;}
function dragged(e,d){d3.select(this).attr("cx",d.x=e.x).attr("cy",d.y=e.y);}
function dragended(e,d){if(!e.active)simulation.alphaTarget(0.0001);d.fx=null;d.fy=null;dragging=false;}
d3.select(window).on("resize",function(){width=+svg.node().getBoundingClientRect().width;height=+svg.node().getBoundingClientRect().height;updateForces();});let data={"nodes":[],"links":[]}
let margin=({top:20,right:20,bottom:20,left:250});let step=25;let svg,graph,zoomTransform,height,y,color,firstSelection,lastSelection,link_callback,relations_callback=undefined;let buildGraph=()=>{const nodes=data.nodes.map(({id,type,customName,props})=>({id,customName,sourceLinks:[],targetLinks:[],type,props}));const nodeById=new Map(nodes.map(d=>[d.id,d]));const links=data.links.map(({source,target,relationType})=>({source:nodeById.get(source),target:nodeById.get(target),relationType}));for(const link of links){const{source,target}=link;source.sourceLinks.push(link);target.targetLinks.push(link);}
return{nodes,links};}
export function setData(fdos){data=fdos;height=(data.nodes.length-1)*2*step+margin.top+margin.bottom;graph=buildGraph();y=d3.scalePoint(graph.nodes.map(d=>d.id).sort(d3.ascending),[margin.top,height-margin.bottom])
color=d3.scaleOrdinal(graph.nodes.map(d=>d.type).sort(d3.ascending),d3.schemeCategory10)}
let line,circles,pathLabels,idLayer,overlay,label,path;let altDown=false;export function chart(chartData,link_cb,relations_cb){setData(chartData);link_callback=link_cb;relations_callback=relations_cb;svg=d3.select("svg").attr("viewBox",[0,0,400,height]).on("mousedown",mousedown).on("mouseup",mouseup);d3.select("body").on("keydown",function(e){altDown=e.altKey;if(e.altKey){svg.on('.zoom',null);}}).on("keyup",function(e){altDown=e.altKey;if(!e.altKey){svg.call(d3.zoom().extent([[0,0],[640,height]]).scaleExtent([0,8]).on("zoom",zoomed));}});update();return svg.node();}
var line,circles;function mousedown(e){var m=d3.pointer(e);line=svg.append("line").attr("fill","#444").attr("stroke-opacity",0.6).attr("stroke-width",2.5).attr('stroke',"#444").attr("x1",m[0]).attr("y1",m[1]).attr("x2",m[0]).attr("y2",m[1]);circles.on("mousemove",mousemove);}
function mousemove(e){var m=d3.pointer(e);line.attr("x2",m[0]).attr("y2",m[1]);}
function mouseup(e,d){console.log(d);svg.selectAll("line").remove();svg.on("mousemove",null);}
function reset(){svg.selectAll("*").remove();svg.append("style").text(`.hover path{}.fdo_label{stroke:#999;}.hover text{}.hover g.primary text{fill:black;font-weight:bold;}.hover g.secondary text{fill:#333;}.hover path.primary{stroke:#333;stroke-opacity:1;}
g.selected text{fill:red;font-weight:bold;}.tooltip{background:#fefabc;pointer-events:none;border:1px solid#cccccc;padding:5px;box-shadow:0px 2px 4px rgba(0,0,0,0.3);border-radius:10px;}.first_node{stroke:#00FF00;stroke-opacity:1;stroke-width:2;}.second_node{stroke:#FF0000;stroke-opacity:1;stroke-width:2;}`);let defs=svg.join("defs");defs.append('marker').attr('id','arrow').attr('viewBox',[0,0,40,40]).attr('refX',20).attr('refY',20).attr('markerWidth',40).attr('markerHeight',40).attr('orient','reverse').append('path').attr("fill","#444").attr("stroke-opacity",0.6).attr("stroke-width",0.5).attr('stroke',"#444").attr('d','M0,0Q15,0,20,10,15,20,0,20A1,1,0,000,0').attr('transform','scale(2)')
defs.append("svg:marker").attr("id","triangle").attr("refX",6).attr("refY",6).attr("markerWidth",30).attr("markerHeight",30).attr("markerUnits","userSpaceOnUse").attr("orient","auto").append("path").attr("d","M 0 0 12 6 0 12 3 6").style("fill","black");defs.append("shape").attr("id","label").append("path").attr("d","M-3 0 0 5-5 3-32 3-32-5-3-5-3 0").style("fill","none");let grads=defs.selectAll("radialGradient").data(graph.nodes).enter().append("radialGradient").attr("gradientUnits","objectBoundingBox").attr("cx",0).attr("cy",0).attr("r","100%").attr("id",function(d,i){return"grad"+i;});grads.append("stop").attr("offset","0%").style("stop-color","white");grads.append("stop").attr("offset","100%").style("stop-color",function(d){return color((d.customName?d.customName:d.id));});firstSelection=undefined;lastSelection=undefined;}
export function update(){reset();let tip=d3.select("body").append("div").attr("class","tooltip").style("opacity",0);let options=d3.select("body").append("div").attr("class","tooltip").style("opacity",0);let select=options.append("select").attr("id","relationType");select.append("option").attr("value","first").text("test1");select.append("option").attr("value","second").text("test2")
label=svg.append("g");overlay=svg.append("g");idLayer=svg.insert("g");circles=svg.append("g").selectAll("circle").data(graph.nodes).join("circle").attr("fill",function(d,i){return"url(#grad"+i+")";}).attr("cx",d=>{d.x=margin.left;return d.x}).attr("cy",d=>{d.y=y(d.id);return d.y}).attr("r",8).on("click",(e,d)=>selectNode(e,d)).on("mouseover",(e,d)=>{svg.classed("hover",true);path.classed("primary",l=>l.source===d||l.target===d).filter(".primary").raise();path.attr('stroke-linecap','round').filter(".primary").attr("marker-end",'url(#triangle)');relations_callback(d.sourceLinks,d.targetLinks);let linkNodes=[];linkNodes.push(d);for(let i=0;i<d.sourceLinks.length;i++){linkNodes.push(d.sourceLinks[i].target);}
for(let i=0;i<d.targetLinks.length;i++){linkNodes.push(d.targetLinks[i].source);}
overlay.attr("fill","#FFF").attr("pointer-events","all").selectAll("path").data(linkNodes).join("path").attr("class","fdo_label").attr("x",d=>{d.x=margin.left;return d.x}).attr("y",d=>{d.y=y(d.id);return d.y}).attr("d",d=>`M${margin.left-12}${y(d.id)-12}l 6 10 l-10-4 l-170 0 l 0-16 l 174 0 Z`);idLayer.attr("font-family","sans-serif").attr("font-size",10).attr("text-anchor","end").selectAll("g").data(linkNodes).join("g").call(g=>g.append("text").attr("class","fdo_label").attr("fill","#0").attr("stroke-width",0).attr("x",margin.left-20).attr("y",d=>d.y=y(d.id)-10).attr("fill",d=>d3.lab(color(d.type)).darker(2)).text(d=>d.customName?d.customName:d.id));overlay.classed("primary",n=>n&&n===d);overlay.classed("secondary",n=>n&&(n.sourceLinks.some(l=>l.target===d)||n.targetLinks.some(l=>l.source===d)));overlay.classed("primary",n=>n&&(n===d||n.sourceLinks.some(l=>l.target===d)||n.targetLinks.some(l=>l.source===d)));circles.attr("r",n=>{return(n===firstSelection||n===lastSelection||n===d)?10:8});}).on("mouseout",e=>{svg.classed("hover",false);overlay.classed("primary",false);overlay.classed("secondary",false);path.classed("primary",false).order();path.attr('stroke-linecap','round').attr("marker-end",'none');tip.style("opacity",0).style("left","0px").style("top","0px")
relations_callback();d3.selectAll(".fdo_label").remove();circles.attr("r",n=>{return(n===firstSelection||n===lastSelection)?10:8});}).on("click",(e,d)=>{if(firstSelection===d){firstSelection=undefined;}else if(lastSelection===d){lastSelection=undefined;}else{if(firstSelection){lastSelection=d;}else{firstSelection=d;}}
link_callback(firstSelection,lastSelection);circles.classed("first_node",n=>n===firstSelection);circles.classed("second_node",n=>n===lastSelection);circles.attr("r",n=>{return(n===firstSelection||n===lastSelection)?10:8});}).on("mousedown",mousedown).on("mouseup",mouseup);path=svg.insert("g","*").attr("fill","none").attr("stroke-opacity",0.6).attr("stroke-width",0.5).selectAll("path").data(graph.links).join("path").attr("id","wavy").attr("stroke",d=>color(d.relationType)).attr("d",arc);pathLabels=svg.insert("g").selectAll("text").data(graph.links).join("text").attr("font-family","sans-serif").attr("font-size",4).attr("x",function(d){let dir=(d.target.y>d.source.y)?-2:1;let r=Math.abs(d.target.y-d.source.y)/2;return d.source.x+(dir*r);}).attr("y",function(d){let r=Math.abs(d.target.y-d.source.y)/2;let sy=(d.source.y<d.target.y)?d.source.y:d.target.y;return sy+r;})
.style("text-anchor","start").text(d=>d.relationType);if(zoomTransform){zoomed(zoomTransform);}}
function zoomed({transform}){zoomTransform={transform};label.attr("transform",transform);path.attr("transform",transform);overlay.attr("transform",transform);circles.attr("transform",transform);pathLabels.attr("transform",transform);idLayer.attr("transform",transform);}
function mousedown(e){if(!altDown)return;let m=d3.pointer(e);line=svg.append("line").attr("stroke","#000").attr("stroke-opacity",0.6).attr("stroke-width",1.5).attr("x1",m[0]).attr("y1",m[1]).attr("x2",m[0]).attr("y2",m[1]);svg.on("mousemove",mousemove);}
function mousemove(e){if(!altDown)return;let m=d3.pointer(e);line.attr("x2",m[0]).attr("y2",m[1]);}
function mouseup(){svg.on("mousemove",null);svg.selectAll("line").remove();svg.call(d3.zoom().extent([[0,0],[640,height]]).scaleExtent([0,8]).on("zoom",zoomed));}
function fillInfoBox(infoBox,props){infoBox.selectAll("circle").remove();infoBox.selectAll("text").remove();if(!props)return;let keys=Object.keys(props);for(let i=0;i<keys.length;i++){let value=props[keys[i]];infoBox.append("text").attr("x",410).attr("y",i*20-80).text(keys[i]+" : "+value).style("font-size","12px").attr("alignment-baseline","middle")}}
function propsToHtml(props){let result="";let keys=Object.keys(props);for(let i=0;i<keys.length;i++){let value=props[keys[i]];result+=keys[i]+":"+value+"<br/>";}
return result;}
function arc(d){let dx=d.target.x-d.source.x,dy=d.target.y-d.source.y,dr=Math.sqrt(dx*dx+dy*dy)/2,mx=d.source.x+dx,my=d.source.y+dy,dir=(d.source.y<d.target.y)?-1:1;return["M",d.source.x+(12*dir),d.source.y,"A",dr,dr,0,0,0,d.target.x+(12*dir),d.target.y].join(" ");}
export let config={};function generateEtag(idValue,type){let accept=(type==="metadata")?"application/vnd.datamanager.metadata-record+json":"application/vnd.datamanager.schema-record+json";let headers={Accept:accept};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
return new Promise(function(resolve,reject){$.ajax({type:"GET",url:config.ajaxBaseUrl+type+"/"+idValue,dataType:"json",headers:headers,success:function(output,status,xhr){resolve(xhr.getResponseHeader("ETag"));},error:function(result){let message="Failed generate ETag for resource with id "+idValue+". (HTTP "+result.status+")";reject(message);}});});}
export function readSchema(schemaUrl){return new Promise(function(resolve,reject){let headers={};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"GET",url:schemaUrl,headers:headers,success:function(result){resolve(result);},error:function(result){let message="Failed to read schema from URL "+schemaUrl+". (HTTP "+result.status+")";reject(message);}});});}
export function readSchemaIds(){let headers={Accept:"application/vnd.datamanager.schema-record+json"};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
let result=undefined;$.ajax({type:"GET",url:config.ajaxBaseUrl+"schemas?size=100",contentType:"application/json",dataType:'json',async:false,headers:headers,success:function(output,status,xhr){result=output;},error:function(result){let message="Failed to read schema ids from URL "+config.ajaxBaseUrl+"/schemas"+". (HTTP "+result.status+")";result=message;}});return result;}
export function readSchemaRecord(schemaRecordUrl){return new Promise(function(resolve,reject){let headers={Accept:"application/vnd.datamanager.schema-record+json"};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"GET",url:schemaRecordUrl,contentType:"application/json",dataType:'json',headers:headers,success:function(output,status,xhr){resolve(output);},error:function(result){let message="Failed to read schema record from URL "+schemaRecordUrl+". (HTTP "+result.status+")";reject(message);}});});}
export function updateMetadataRecord(valueRecord,metadataDocumentFile){let formData=new FormData();let blobRecord=new Blob([JSON.stringify(JSON.parse(valueRecord),null,2)],{type:"application/json"});const recordFile=new File([blobRecord],'recordFile.json');formData.append("record",recordFile);if(metadataDocumentFile!==null){formData.append("document",metadataDocumentFile);}
return generateEtag(JSON.parse(valueRecord).id,"metadata").then(function(result){return new Promise(function(resolve,reject){let headers={"If-Match":result};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"PUT",url:config.ajaxBaseUrl+"metadata/"+JSON.parse(valueRecord).id,contentType:false,processData:false,"headers":headers,data:formData,success:function(){resolve("Metadata record successfully updated.");},error:function(result){var response=JSON.parse(result.responseText);let message="Failed to update metadata record. (HTTP "+result.status+") -> "+response.detail;reject(message);}});});});}
export function updateSchemaRecord(valueRecord,schemaDocumentFile){let formData=new FormData();let blobRecord=new Blob([JSON.stringify(JSON.parse(valueRecord),null,2)],{type:"application/json"});const recordFile=new File([blobRecord],'recordFile.json');formData.append("record",recordFile);if(schemaDocumentFile!==null){formData.append("schema",schemaDocumentFile);}
let schemaId=JSON.parse(valueRecord).schemaId;return generateEtag(schemaId,"schemas").then(function(result){return new Promise(function(resolve,reject){let headers={"If-Match":result};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
$.ajax({type:"PUT",url:config.ajaxBaseUrl+"schemas/"+schemaId,contentType:false,processData:false,"headers":headers,data:formData,success:function(){resolve("Schema record successfully updated.");},error:function(result){var response=JSON.parse(result.responseText);let message="Failed to update schema record. (HTTP "+result.status+") -> "+response.detail;reject(message);}});});});}
export function createMetadataRecord(valueMetadataRecord,metadataDocumentFile){let headers={};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
let formData=new FormData();let blobRecord=new Blob([JSON.stringify(JSON.parse(valueMetadataRecord),null,2)],{type:"application/json"});const metadataRecordFile=new File([blobRecord],'metadataRecordFile.json');formData.append("document",metadataDocumentFile);formData.append("record",metadataRecordFile);return new Promise(function(resolve,reject){$.ajax({type:"POST",url:config.ajaxBaseUrl+"metadata",contentType:false,processData:false,data:formData,headers:headers,success:function(){resolve("Metadata document successfully created.");},error:function(result){var response=JSON.parse(result.responseText);let message="Failed to ingest metadata document. (HTTP "+result.status+") -> "+response.detail;reject(message);}});});}
export function createSchemaRecord(valueSchemaRecord,schemaDocumentFile){let headers={};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
let formData=new FormData();let blobRecord=new Blob([JSON.stringify(JSON.parse(valueSchemaRecord),null,2)],{type:"application/json"});const metadataRecordFile=new File([blobRecord],'schemaDocumentFile.json');formData.append("schema",schemaDocumentFile);formData.append("record",metadataRecordFile);return new Promise(function(resolve,reject){$.ajax({type:"POST",url:config.ajaxBaseUrl+"schemas",contentType:false,processData:false,data:formData,headers:headers,success:function(){resolve("Schema document successfully created.")},error:function(result){var response=JSON.parse(result.responseText);let message="Failed to create schema record. (HTTP "+result.status+") -> "+response.detail;result.responseText.detail;reject(message);}});});}
export function readMetadataDocument(metadataDocumentUri){let headers={};if(config.token!==null){headers["Authorization"]="Bearer "+config.token;}
return new Promise(function(resolve,reject){$.ajax({type:"GET",url:metadataDocumentUri,dataType:'text',headers:headers,success:function(result){resolve(result);},error:function(result){let message="Failed to read metadata document from URL "+metadataDocumentUri+" (HTTP "+result.status+")";reject(message);}});});}
const container=document.getElementById("jsoneditor")
const options={mode:'tree',modes:['code','text','tree','view']}
const editor=new JSONEditor(container,options);load()
function load(){}
export let config={};let relation_types=[{"pid":"21.T11148/4fe7cde52629b61e3b82","label":"isMetadataFor"},{"pid":"21.T11148/d0773859091aeb451528","label":"hasMetadata"},{"pid":"21.T11148/c6e4c19f294ee6f41b1e","label":"wasDerivedFrom"},{"pid":"21.T11148/2a1cad55473b20407c78","label":"wasRevisionOf"},{"pid":"21.T11148/a753134738da82809fc1","label":"hadPrimarySource"},{"pid":"21.T11148/beaeecebec408908de35","label":"wasQuotedFrom"},{"pid":"21.T11148/432132bdbd946b2baf2b","label":"alternateOf"},{"pid":"21.T11148/ab53242825e85a0a7f76","label":"specializationOf"},{"pid":"21.T11148/c085f1292d7d4a338d96","label":"wasGeneratedBy"},{"pid":"21.T11148/af11e18f83466642c47d","label":"provenanceGraph"},];export function resolveType(pid){let existing=relation_types.find((element)=>element.pid===pid);if(existing){return existing.label;}
return pid;}
export function transformUserInput(formOutput,model,known_types){let record={};let labelMap=known_types.map(a=>a.label);let formOutputObject=JSON.parse(formOutput);let keys=Object.keys(formOutputObject);for(let i=0;i<keys.length;i++){let pid=model['properties'][keys[i]]['pid'];if(labelMap.indexOf(formOutputObject[keys[i]])>=0){record[pid]=known_types.slice(labelMap.indexOf(formOutputObject[keys[i]]),1).at(0)['pid'];}else{if(pid=='21.T11148/82e2503c49209e987740'){let checksumValue=formOutputObject[keys[i]];let checksumAlg=undefined;switch(checksumValue.length){case 32:{checksumAlg="md5";break;}
default:{checksumAlg="sha"+(4*checksumValue.length);}}
let checksumRecordValue={};checksumRecordValue[checksumAlg+"sum"]=checksumValue;record[pid]=checksumRecordValue;}else if(pid=='21.T11148/b415e16fbe4ca40f2270'){}else{if(formOutputObject[keys[i]]){record[pid]=formOutputObject[keys[i]];}}}}
return record;}
export function createFdo(fdo){let headers={"Content-Type":"application/vnd.datamanager.pid.simple+json"};return new Promise(function(resolve,reject){$.ajax({type:"POST",url:config.ajaxBaseUrl+"/api/v1/pit/pid/",headers:headers,data:JSON.stringify(fdo.toTypedPidMaker(),null,2),cache:false,success:function(result){resolve(result);},error:function(result){let message="Failed register FDO. (HTTP "+result.status+")";reject(message);}})})}
export function updateFdo(fdo){let headers={"Content-Type":"application/vnd.datamanager.pid.simple+json"};console.log(JSON.stringify(fdo.toTypedPidMaker(),null,2));return new Promise(function(resolve,reject){$.ajax({type:"PUT",url:config.ajaxBaseUrl+"/api/v1/pit/pid/"+fdo.getPid(),headers:headers,data:JSON.stringify(fdo.toTypedPidMaker(),null,2),cache:false,success:function(result){resolve(result);},error:function(result){let message="Failed to update FDO. (HTTP "+result.status+")";reject(message);}})})}
export function readFdo(pid){let headers={"Accept":"application/vnd.datamanager.pid.simple+json"};return new Promise(function(resolve,reject){$.ajax({type:"GET",url:config.ajaxBaseUrl+"/api/v1/pit/pid/"+pid,headers:headers,cache:false,success:function(result){resolve(result);},error:function(result){let message="Failed to read FDO. (HTTP "+result.status+")";reject(message);}})})}